name: Pull request

on:
  pull_request:
    branches: [ main ]

env:
  GO111MODULE: on
  INSTALL_DEPS: true

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || 'branch' }} # scope to for the current workflow
  cancel-in-progress: ${{ github.event_name == 'pull_request' }} # cancel only PR related jobs

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: "Build and unit-test"
        run: make test-unit
      - name: "Hammer unit-test"
        run: make test-hammer
  code-quality-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: "Code Quality Analysis"
        run: make test-lint
  integration-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - if: matrix.os == 'windows-latest'
        run: echo "BINARY_EXT=.exe" >> $GITHUB_ENV
      - name: "Integration testing"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_INTEGRATION_TESTS }}
          TOKEN_WITH_NO_SCOPES: ${{ secrets.TOKEN_WITH_NO_SCOPES }}
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
        run: |
          echo "${{ env.BINARY_PATH }}"
          make test-integration
